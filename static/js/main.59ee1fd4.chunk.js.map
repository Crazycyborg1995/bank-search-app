{"version":3,"sources":["assets/heart.svg","assets/like.svg","components/Header/Header.js","components/Spinner/Spinner.js","components/Pagination/Pagination.js","components/Banks/Banks.js","components/Main/Main.js","components/Layout/Layout.js","components/Dropdown/Dropdown.js","components/SearchInput/SearchInput.js","components/Bank/Bank.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","Spinner","Pagination","props","_useState","useState","_useState2","Object","slicedToArray","beg","setBeg","totalPageNums","totalItems","itemsPerPage","i","Math","ceil","push","href","onClick","e","preventDefault","sub","sign","decrementPages","aria-hidden","slice","map","pageNum","key","uuid","v4","currentPage","changePageHandler","add","length","incrementPages","Banks","JSON","parse","localStorage","getItem","like","setlike","likedArray","likeHandler","id","target","parentNode","dataset","setItem","stringify","banks","bank","data-id","ifsc","scope","bank_id","react_router_dom","to","pathname","concat","toLowerCase","state","bank_name","branch","city","join","includes","style","width","src","Like","alt","data-like","Unlike","Main","setCurrentPage","_useState3","_useState4","lastItemIndex","firstItemIndex","itemsToLoad","Banks_Banks","page","Layout","loading","Spinner_Spinner","filteredBanks","Dropdown","onChange","changed","value","SearchInput","type","searching","placeholder","Bank","location","_props$location$state","address","history","goBack","App","fetchCachedData","data","_this","setState","dropdownHandler","axios","get","toUpperCase","then","res","filterData","text","getData","query","regex","RegExp","filter","_i","_Object$values","values","item","test","searchHandler","debounce","_this2","this","_this3","react_router","path","exact","component","render","Component","Boolean","window","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59ee1fd4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/heart.aa7b03b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/like.d654ce19.svg\";","import React from 'react';\r\n\r\nexport default function Header() {\r\n  return (\r\n    <div className=\"text-center mb-5\">\r\n      <h1 className=\"text-primary\">Bank Search App</h1>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <div className=\"spinner__container\">\r\n      <div className=\"spinner\">\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport uuid from 'uuid';\r\n\r\nexport default function Pagination(props) {\r\n  const [beg, setBeg] = useState(0);\r\n  const totalPageNums = [];\r\n  let { totalItems, itemsPerPage } = props;\r\n  for (let i = 1; i <= Math.ceil(totalItems / itemsPerPage); i++) {\r\n    totalPageNums.push(i);\r\n  }\r\n\r\n  let incrementPages = e => {\r\n    e.preventDefault();\r\n    let add = beg + 5;\r\n    if (add > totalPageNums.length) {\r\n      return;\r\n    }\r\n    setBeg(add);\r\n  };\r\n\r\n  let decrementPages = e => {\r\n    e.preventDefault();\r\n    let sub = beg - 5;\r\n    if (Math.sign(sub) != -1) {\r\n      setBeg(sub);\r\n    }\r\n  };\r\n\r\n  let showPageNums = () => totalPageNums.slice(beg, beg + 5);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination justify-content-center mt-5\">\r\n        <li className=\"page-item\">\r\n          <a className=\"page-link\" href=\"#\" onClick={e => decrementPages(e)}>\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n            <span className=\"sr-only\">Previous</span>\r\n          </a>\r\n        </li>\r\n        {showPageNums().map(pageNum => {\r\n          return (\r\n            <li className=\"page-item\" key={uuid.v4()}>\r\n              <a\r\n                className={\r\n                  pageNum === props.currentPage\r\n                    ? 'page-link bg-primary text-white'\r\n                    : 'page-link'\r\n                }\r\n                href=\"#\"\r\n                onClick={e => props.changePageHandler(e, pageNum)}\r\n              >\r\n                {pageNum}\r\n              </a>\r\n            </li>\r\n          );\r\n        })}\r\n\r\n        <li className=\"page-item\">\r\n          <a className=\"page-link\" href=\"\" onClick={e => incrementPages(e)}>\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n            <span className=\"sr-only\">Next</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Unlike from '../../assets/heart.svg';\r\nimport Like from '../../assets/like.svg';\r\nimport uuid from 'uuid';\r\nimport './Banks.css';\r\n\r\nexport default function Banks(props) {\r\n  const [like, setlike] = useState(\r\n    JSON.parse(localStorage.getItem('likes')) || []\r\n  );\r\n\r\n  let likedArray = like.slice();\r\n  let likeHandler = e => {\r\n    e.preventDefault();\r\n    let id = e.target.parentNode.parentNode.parentNode.dataset.id;\r\n    if (e.target.dataset.like === 'true') {\r\n      return;\r\n    }\r\n    likedArray.push(id);\r\n    setlike(likedArray);\r\n    localStorage.setItem('likes', JSON.stringify(likedArray));\r\n  };\r\n\r\n  let banks = <td className=\"error__message\">Sorry No Data found!</td>;\r\n  if (props.banks.length > 0) {\r\n    banks = props.banks.slice(0, 10).map(bank => {\r\n      return (\r\n        <tr key={uuid.v4()} data-id={bank.ifsc}>\r\n          <th scope=\"row\">{bank.bank_id}</th>\r\n          <td>\r\n            <Link\r\n              to={{ pathname: `/bank/${bank.ifsc.toLowerCase()}`, state: bank }}\r\n            >\r\n              {bank.bank_name}\r\n            </Link>\r\n          </td>\r\n          <td>{bank.branch}</td>\r\n          <td>{bank.city}</td>\r\n          <td className=\"text-center\">\r\n            <a href=\"#\">\r\n              {likedArray.join('').includes(bank.ifsc) ? (\r\n                <img\r\n                  style={{ width: '20px' }}\r\n                  src={Like}\r\n                  alt=\"\"\r\n                  onClick={e => likeHandler(e)}\r\n                  data-like=\"true\"\r\n                />\r\n              ) : (\r\n                <img\r\n                  style={{ width: '20px' }}\r\n                  onClick={e => likeHandler(e)}\r\n                  data-like=\"false\"\r\n                  src={Unlike}\r\n                />\r\n              )}\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n  return (\r\n    <table className=\"table table-striped mt-5\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\"># ID</th>\r\n          <th scope=\"col\">Name</th>\r\n          <th scope=\"col\">Branch</th>\r\n          <th scope=\"col\">City</th>\r\n          <th scope=\"col\" className=\"text-center\">\r\n            Favourites\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>{banks}</tbody>\r\n    </table>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport Pagination from '../Pagination/Pagination';\r\nimport Banks from '../Banks/Banks';\r\n\r\nexport default function Main(props) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage, setItemsPerPage] = useState(10);\r\n\r\n  let changePageHandler = (e, page) => {\r\n    e.preventDefault();\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  let lastItemIndex = currentPage * itemsPerPage;\r\n  let firstItemIndex = lastItemIndex - itemsPerPage;\r\n  let itemsToLoad = props.banks.slice(firstItemIndex, lastItemIndex);\r\n  return (\r\n    <div>\r\n      <Banks banks={itemsToLoad} />\r\n      {props.banks.length > 10 ? (\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalItems={props.banks.length}\r\n          itemsPerPage={itemsPerPage}\r\n          changePageHandler={changePageHandler}\r\n        />\r\n      ) : (\r\n        ''\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Main from '../Main/Main';\r\n\r\nexport default function Layout(props) {\r\n  return (\r\n    <div>\r\n      {props.loading ? <Spinner /> : <Main banks={props.filteredBanks} />}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Dropdown(props) {\r\n  return (\r\n    <div className=\"col-4\">\r\n      <div className=\"input-group mb-3\">\r\n        <select className=\"custom-select\" onChange={e => props.changed(e)}>\r\n          <option value=\"chennai\">Chennai</option>\r\n          <option value=\"banglore\">Banglore</option>\r\n          <option value=\"mumbai\">Mumbai</option>\r\n          <option value=\"delhi\">Delhi</option>\r\n          <option value=\"kolkata\">Kolkata</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function SearchInput(props) {\r\n  return (\r\n    <div className=\"col-8\">\r\n      <div className=\"input-group mb-3\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={e => props.searching(e.target.value)}\r\n          className=\"form-control\"\r\n          placeholder=\"Search\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Bank(props) {\r\n  if (props.location.state) {\r\n    var {\r\n      bank_name,\r\n      address,\r\n      branch,\r\n      city,\r\n      ifsc,\r\n      state\r\n    } = props.location.state;\r\n  }\r\n  return (\r\n    <div className=\"card text-center my-5\">\r\n      {props.location.state ? (\r\n        <div className=\"card-body\">\r\n          <h3 className=\"card-title mb-5\">{bank_name}</h3>\r\n          <dl className=\"row\">\r\n            <dt className=\"col-sm-5\">Address</dt>\r\n            <dd className=\"col-sm-7\">\r\n              <p>{address}</p>\r\n            </dd>\r\n\r\n            <dt className=\"col-sm-5\">Branch</dt>\r\n            <dd className=\"col-sm-7\">\r\n              <p>{branch}</p>\r\n            </dd>\r\n            <dt className=\"col-sm-5\">IFSC</dt>\r\n            <dd className=\"col-sm-7\">\r\n              <p>{ifsc}</p>\r\n            </dd>\r\n            <dt className=\"col-sm-5\">City</dt>\r\n            <dd className=\"col-sm-7\">\r\n              <p>{city}</p>\r\n            </dd>\r\n            <dt className=\"col-sm-5\">State</dt>\r\n            <dd className=\"col-sm-7\">\r\n              <p>{state}</p>\r\n            </dd>\r\n          </dl>\r\n          <a\r\n            href=\"#\"\r\n            onClick={() => props.history.goBack()}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Go Back\r\n          </a>\r\n        </div>\r\n      ) : (\r\n        <h1>Not Available</h1>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Layout from './components/Layout/Layout';\nimport Dropdown from './components/Dropdown/Dropdown';\nimport SearchInput from './components/SearchInput/SearchInput';\nimport Bank from './components/Bank/Bank';\nimport axios from 'axios';\nimport { debounce } from 'lodash';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    banks: [],\n    filteredBanks: [],\n    loading: true\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem('chennai')) {\n      this.fetchCachedData('chennai');\n    } else {\n      axios\n        .get('https://vast-shore-74260.herokuapp.com/banks?city=CHENNAI')\n        .then(res => {\n          localStorage.setItem('chennai', JSON.stringify(res.data));\n          this.setState({\n            banks: res.data,\n            filteredBanks: res.data,\n            loading: false\n          });\n        });\n    }\n  }\n\n  fetchCachedData = city => {\n    let data = JSON.parse(localStorage.getItem(city));\n\n    this.setState({ banks: data, filteredBanks: data, loading: false });\n  };\n\n  dropdownHandler = e => {\n    let city = e.target.value;\n    this.setState({ loading: true });\n    if (localStorage.getItem(city)) {\n      this.fetchCachedData(city);\n    } else {\n      axios\n        .get(\n          `https://vast-shore-74260.herokuapp.com/banks?city=${city.toUpperCase()}`\n        )\n        .then(res => {\n          localStorage.setItem(city, JSON.stringify(res.data));\n          this.setState({\n            banks: res.data,\n            filteredBanks: res.data,\n            loading: false\n          });\n        });\n    }\n  };\n\n  filterData = text => {\n    this.setState({\n      filteredBanks: this.getData(this.state.banks, text)\n    });\n  };\n\n  getData = (data, query) => {\n    let regex = new RegExp(query, 'gi');\n    let filtered = data.filter(data => {\n      for (let item of Object.values(data)) {\n        if (regex.test(item)) {\n          return true;\n        }\n      }\n      return false;\n    });\n    return filtered;\n  };\n\n  searchHandler = debounce(text => {\n    this.filterData(text);\n  }, 500);\n\n  render() {\n    return (\n      <div className=\"container mt-5\">\n        <Header />\n        <Switch>\n          <Route path=\"/bank/:id\" exact component={Bank} />\n          <Route\n            path=\"/\"\n            render={() => (\n              <div>\n                <div className=\"row\">\n                  <Dropdown changed={this.dropdownHandler} />\n                  <SearchInput searching={this.searchHandler} />\n                </div>\n                <Layout\n                  loading={this.state.loading}\n                  filteredBanks={this.state.filteredBanks}\n                />\n              </div>\n            )}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}